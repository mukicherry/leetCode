package mqy.api.leetcode._532_K_diff_Pairs_in_a_array;
import java.util.*;
/**
 * Created by maoqiyun on 2017/4/7.
 */
public class OthersSolution2 {
    public int findPairs(int[] nums, int k) {
        if (k < 0) { return 0; }

        Set<Integer> starters = new HashSet<>();
        Set<Integer> uniqs = new HashSet<>();
        for (int i = 0; i < nums.length; i++) {
            if (uniqs.contains(nums[i] - k))
                starters.add(nums[i] - k);
            if (uniqs.contains(nums[i] + k))
                starters.add(nums[i]);
            uniqs.add(nums[i]);
        }

        return starters.size();
    }
    public static void main(String[] args) {
        OthersSolution2 solution = new OthersSolution2();
//        int[] array = {3,1,4,1,5}; int k = 2;//output=2
        int[] array = {1, 2, 3, 4, 5}; int k = 1;//output=4
//        int[] array = {1, 3, 1, 5, 4}; int k = 0;//output=1
//        int[] array = {1, 1, 1, 2, 1}; int k = 1;//output=1
//        int[] array = {-1,0,0,1,0,0,-1}; int k = 1;//output=2
//        int[] array = {-1,-2,-3}; int k = 1;//output=2
//        int[] array = {34,224,394,393,367,517,91,454,112,155,409,483,102,18,291,214,57,427,252,368,223,82,277,387,485,494,295,330,51,143,71,179,356,238,81,69,205,340,517,164,161,241,407,505,79,357,380,330,475,18,430,341,260,445,266,119,518,172,479,493,479,119,358,273,304,402,219,192,290,476,186,107,67,478,22,185,518,419,114,56,224,222,161,425,256,478,306,273,153,307,282,413,299,215,269,179,227,19,391,514,434,190,161,388,96,186,65,299,291,148,32,369,328,80,176,54,323,450,169,111,191,297,220,78,151,460,90,497,356,74,240,348,247,128,315,161,84,268,522,231,360,57,254,518,451,96,196,13,81,248,261,484,191,131,123,472,323,420,511,474,113,376,312,154,65,228,219,487,180,144,135,199,49,525,26,33,44,318,235,317,197,385,260,413,333,54,391,68,242,369,156,256,99,189,0,453,7,42,342,69,214,234,75,330,321,45,142,391,464,159,207,262,400,239,148,81,482,387,353,305,317,205,90,87,325,386,293,458,125,7,472,230,261,161,26,340,321,110,110,274,298,440,371,489,439,104,72,335,483,295,84,159,357,311,269,384,30,361,67,431,418,259,412,172,102,95,245,95,83,483,50,262,399,212,157,74,160,14,248,155,501,105,381,340,78,465,312,17,78,462,186,198,349,222,334,55,201,66,264,459,391,464,377,50,171,126,222,507,89,281,164,482,222,428,343,339,470,44,389,489,33,171,162,145,436,208,214,0,273,478,41,331,362,334,18,391,463,512,167,327,25,23,156,70,260,373,466,524,110,315,352,372,64,462,72,436,332,299,400,331,156,423,120,525,116,516,36,297,293,415,173,229,162,325,374,230,463,107,280,217,118,266,342,333,303,95,11,129,196,8,424,278,193,24,54,519,434,13,311,364,320,276,472,236,266,240,98,510,124,297,434,167,517,100,19,451,274,199,237,376,322,72,109,514,236,133,426,73,261,226,459,494,179,37,126,185,77,403,392,263,428,104,240,177,205,184,181,11,309,164,5,118,233,275,444,251,15,521,117,385,396,303,396,149,483,227,66,407,209,404,72,13,40,231,103,97,107,97,245,39,247,134,400,264,413,398,165,194,58,31,240,248,60,315,504,171,44,84,429,139,440,450,254,508,78,219,413,382,214,511,14,56,373,176,173,373,329,417,393,398,506,163,450,426,494,216,9,295,286,304,403,421,368,493,449,448,207,524,482,140,418,381,68,90,485,254,121,357,319,142,379,251,255,367,370,39,401,360,153,253,15,86,146,318,412,421,377,453,126,351,252,163,97,10,39,333,459,302,517,438,453,332,14,64,108,66,437,318,125,506,492,509,283,199,33,457,6,475,119,272,517,328,243,172,170,299,429,457,155,144,91,362,481,150,194,159,297,121,84,47,132,393,97,243,490,14,265,66,356,163,46,204,70,229,136,408,432,46,471,252,440,33,272,35,422,384,391,333,292,504,21,465,13,108,318,137,198,24,150,99,342,264,221,428,399,121,142,107,257,152,188,482,95,112,74,48,126,485,245,199,344,374,61,19,213,131,42,253,315,324,449,139,362,282,3,498,76,201,346,101,371,169,524,439,203,268,283,282,84,397,252,5,437,429,344,91,440,189,393,525,226,373,213,31,6,96,410,161,63,208,281,177,378,122,485,466,128,17,381,185,183,455,391,120,367,216,495,241,290,317,365,161,80,331,303,217,37,229,329,417,361,270,387,367,465,130,518,70,20,252,458,303,218,343,90,310,159,132,204,306,469,394,459,341,486,149,423,479,403,57,271,407,286,524,19,206,314,55,404,468,165,106,460,414,324,468,440,76,206,27,412,411,121,446,148,126,311,172,268,199,117,349,496,36,328,241,21,68,482,48,427,482,316,262,157,109,163,5,419,49,405,270,270,403,209,145,300,157,505,154,0,115,162,380,129,180,457,390,499,511,459,104,96,36,9,434,361,80,142,441,386,65,136,166,387,257,133,339,283,72,130,54,428,325,14,277,166,424,22,193,354,371,119,478,286,95,55,40,345,321,246,122,233,243,423,292,26,270,260,491,80,263,263,27,369,518,150,75,43,249,503,274,420,31,344,468,397,198,229,319,494,462,108,126,144,217,113,311,233,240,160,167,81,291,61,317,1,64,213,505,421,74,198,119,191,343,249,75,471,458,433,159,414,307,389,60,413,79,283,521,493,93,235,241,199,435,34,433,91,272,29,30,91,486,36,515,219,479,198,33,348,123,78,459,486,185,34,125,375,249}; int k = -312;//output=2
        int nums = solution.findPairs(array, k);
        System.out.print(nums);
    }
}
